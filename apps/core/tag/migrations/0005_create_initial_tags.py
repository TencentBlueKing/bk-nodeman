# Generated by Django 3.2.4 on 2024-02-29 09:40

from django.db import IntegrityError, migrations

from apps.core.tag.constants import TargetType
from apps.core.tag.models import Tag
from apps.node_man.constants import CategoryType, GsePackageCode
from apps.node_man.models import GsePackageDesc


def create_initial_tags(apps, schema_editor):
    try:
        agent_target_id = GsePackageDesc.objects.get(
            project=GsePackageCode.AGENT.value, category=CategoryType.official
        ).id

        proxy_target_id = GsePackageDesc.objects.get(
            project=GsePackageCode.PROXY.value, category=CategoryType.official
        ).id
    except GsePackageDesc.DoesNotExist:
        agent_target_id = GsePackageDesc.objects.create(
            project=GsePackageCode.AGENT.value, category=CategoryType.official
        ).id

        proxy_target_id = GsePackageDesc.objects.create(
            project=GsePackageCode.PROXY.value, category=CategoryType.official
        ).id

    tag_name__tag_description__map = {
        "stable": "稳定版本",
        "latest": "最新版本",
        "test": "测试版本",
    }
    for target_id in [proxy_target_id, agent_target_id]:
        for tag_name, tag_description in tag_name__tag_description__map.items():
            try:
                # 添加Tag记录
                Tag.objects.create(
                    name=tag_name,
                    description=tag_description,
                    target_id=target_id,
                    target_type=TargetType.AGENT.value,
                )
            except IntegrityError:
                pass


class Migration(migrations.Migration):

    dependencies = [
        ("tag", "0004_alter_tag_unique_together"),
    ]

    operations = [
        migrations.RunPython(create_initial_tags),
    ]
